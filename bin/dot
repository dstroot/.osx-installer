#! /bin/sh
# ------------------------------------------------------------------------------
# Copyright (c) 2014 Dan Stroot
# All rights reserved.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
# IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
# ------------------------------------------------------------------------------
# This script is designed to be idempotent
# ------------------------------------------------------------------------------
# NAME:           dot.sh
# PURPOSE:        Keep everything current!
# VERSION:  1.0   Inital version.
# ------------------------------------------------------------------------------
progname=$0

# set -e
# set -x   # debugging mode?

# Define colors
black='\033[0;30m'
white='\033[0;37m'
red='\033[0;31m'
green='\033[0;32m'
yellow='\033[0;33m'
blue='\033[0;34m'
magenta='\033[0;35m'
cyan='\033[0;36m'

#  Reset text attributes to normal
alias Reset="tput sgr0"

# Color-echo.
#   Argument $1 = message
#   Argument $2 = Color
cecho() {
  echo "${2}${1}"
  Reset # Reset to normal.
  return
}

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until script has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

echo ""
cecho "===================================================" $white
cecho " üç∫  Update Homebrew? (y/n)" $blue
cecho "===================================================" $white
read -r response
case $response in
  [yY])
  sh $HOME/.dotfiles/homebrew/brew.sh
esac

echo ""
cecho "===================================================" $white
cecho " Update Node/NPM and node modules? (y/n)" $blue
cecho "===================================================" $white
read -r response
case $response in
  [yY])
  sh $HOME/.dotfiles/npm/npm.sh
esac

echo ""
cecho "===================================================" $white
cecho " Update Ruby Gems (packages)? (y/n)" $blue
cecho "===================================================" $white
read -r response
case $response in
  [yY])
  sh $HOME/.dotfiles/ruby/gems.sh
esac

echo ""
cecho "===================================================" $white
cecho " Update pip and python packages? (y/n)" $blue
cecho "===================================================" $white
read -r response
case $response in
  [yY])
  sh "$HOME"/.dotfiles/pip/pip.sh
esac

echo ""
cecho "===================================================" $white
cecho " Backup with Mackup? (y/n)" $blue
cecho "===================================================" $white
read -r response
case $response in
  [yY])
  mackup backup
esac

echo ""
cecho "===================================================" $white
cecho " Set OSX defaults? (y/n)" $blue
cecho "===================================================" $white
read -r response
case $response in
  [yY])
  # Set OS X defaults (do it last because it kills everything!!!)
  sh ~/.osx/osx_defaults.sh
esac

exit 0
